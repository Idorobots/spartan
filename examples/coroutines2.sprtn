(letrec ((*queue* (ref nil))
         (queue-empty? (lambda ()
                         (nil? (deref *queue*))))
         (enqueue (lambda (x)
                    (assign! *queue* (append (deref *queue*)
                                             (list x)))))
         (dequeue (lambda ()
                    (let ((q (deref *queue*)))
                      (assign! *queue* (cdr q))
                      (car q))))
         (join (lambda ()
                 (unless (queue-empty?)
                   ((dequeue) nil))))
         (fork (lambda (proc)
                 (enqueue (lambda (_)
                            (reset (proc))
                            (join)))))
         (yield (lambda ()
                  (shift k
                         (do (enqueue k)
                             ((dequeue) nil)))))
         (do-stuff (lambda (x)
                     (lambda ()
                       (display x) (display " 1") (newline)
                       (yield)
                       (display x) (display " 2") (newline)
                       (yield)
                       (display x) (display " 3") (newline)))))
  (fork (do-stuff "foo"))
  (fork (do-stuff "bar"))
  (fork (do-stuff "baz"))
  (join)
  (display "end") (newline))
