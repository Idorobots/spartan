[90m;; [39m[90mSpartan REPL. Type ;help for help.[39m
2 [33m|[39m [90m;; [39mDisabled autorun.
2 [33m|[39m [90m;; [39mEnabled compilation output.
2 [33m|[39m [90m;; [39mListing cleared.
1 [33m|[39m 2 [33m|[39m 3 [33m|[39m 4 [33m|[39m 5 [33m|[39m 6 [33m|[39m 7 [33m|[39m [90m;; [39mCompilation result:
[90m;; [39m(begin
[90m;; [39m  (define __global42
[90m;; [39m    (lambda (__env35 __value17)
[90m;; [39m      (let ((__value10 (+ (cdr __env35) __value17)))
[90m;; [39m        (&yield-cont (car __env35) __value10))))
[90m;; [39m  (define __global43
[90m;; [39m    (lambda (__env37 __value21)
[90m;; [39m      (let ((__value19 (+ (cdr __env37) __value21)))
[90m;; [39m        (&yield-cont (car __env37) __value19))))
[90m;; [39m  (define __global44
[90m;; [39m    (lambda (__env36 __value20)
[90m;; [39m      (let ((__value22 (- (&env-ref __env36 '2) '2)))
[90m;; [39m        (&apply
[90m;; [39m         (&env-ref __env36 '1)
[90m;; [39m         __value22
[90m;; [39m         (&make-closure (cons (&env-ref __env36 '0) __value20) __global43)))))
[90m;; [39m  (define __global45
[90m;; [39m    (lambda (__env34 __value13)
[90m;; [39m      (let ((__value15 (- (&env-ref __env34 '2) '2)))
[90m;; [39m        (let ((__value18 (< __value15 '2)))
[90m;; [39m          (let ((__cont16
[90m;; [39m                 (&make-closure
[90m;; [39m                  (cons (&env-ref __env34 '0) __value13)
[90m;; [39m                  __global42)))
[90m;; [39m            (if __value18
[90m;; [39m              (&yield-cont __cont16 __value15)
[90m;; [39m              (let ((__value23 (- __value15 '1)))
[90m;; [39m                (&apply
[90m;; [39m                 (&env-ref __env34 '1)
[90m;; [39m                 __value23
[90m;; [39m                 (&make-closure
[90m;; [39m                  (&make-env __cont16 (&env-ref __env34 '1) __value15)
[90m;; [39m                  __global44)))))))))
[90m;; [39m  (define __global46
[90m;; [39m    (lambda (__env39 __value26)
[90m;; [39m      (let ((__value24 (+ (cdr __env39) __value26)))
[90m;; [39m        (&yield-cont (car __env39) __value24))))
[90m;; [39m  (define __global47
[90m;; [39m    (lambda (__env38 __value25)
[90m;; [39m      (let ((__value27 (- (&env-ref __env38 '2) '2)))
[90m;; [39m        (&apply
[90m;; [39m         (&env-ref __env38 '1)
[90m;; [39m         __value27
[90m;; [39m         (&make-closure (cons (&env-ref __env38 '0) __value25) __global46)))))
[90m;; [39m  (define __global48
[90m;; [39m    (lambda (__env33 __n2 __cont6)
[90m;; [39m      (let ((__value9 (< __n2 '2)))
[90m;; [39m        (if __value9
[90m;; [39m          (&yield-cont __cont6 __n2)
[90m;; [39m          (let ((__value11 (- __n2 '1)))
[90m;; [39m            (let ((__value14 (< __value11 '2)))
[90m;; [39m              (let ((__cont12
[90m;; [39m                     (&make-closure
[90m;; [39m                      (&make-env __cont6 __env33 __n2)
[90m;; [39m                      __global45)))
[90m;; [39m                (if __value14
[90m;; [39m                  (&yield-cont __cont12 __value11)
[90m;; [39m                  (let ((__value28 (- __value11 '1)))
[90m;; [39m                    (&apply
[90m;; [39m                     __env33
[90m;; [39m                     __value28
[90m;; [39m                     (&make-closure
[90m;; [39m                      (&make-env __cont12 __env33 __value11)
[90m;; [39m                      __global47)))))))))))
[90m;; [39m  (define __global49 (lambda (__env41 __value31) (+ __env41 __value31)))
[90m;; [39m  (define __global50
[90m;; [39m    (lambda (__env40 __value30)
[90m;; [39m      (&apply __env40 '21 (&make-closure __value30 __global49))))
[90m;; [39m  (let ((__env32 '()))
[90m;; [39m    (let ((__fib1 (&make-closure __env32 __global48)))
[90m;; [39m      (begin
[90m;; [39m        (&set-closure-env! __fib1 __fib1)
[90m;; [39m        (&apply __fib1 '22 (&make-closure __fib1 __global50))))))
[90m;; [39m28657
7 [33m|[39m 