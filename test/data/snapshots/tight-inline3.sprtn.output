(begin
  (define __function2777
    (lambda (__arg0 __arg1)
      (let ((tmp2810 (vector-ref __arg0 '1)))
        ((closure-fun tmp2810)
         (closure-env tmp2810)
         (vector-ref __arg0 '2)
         (vector-ref __arg0 '0)))))
  (define __function2778
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       (vector-ref __arg0 '2)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2777))))
  (define __function2779
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2778))))
  (define __function2780
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       (vector-ref __arg0 '2)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2779))))
  (define __function2781
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2780))))
  (define __function2782
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       (vector-ref __arg0 '2)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2781))))
  (define __function2783
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2782))))
  (define __function2784
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       (vector-ref __arg0 '2)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2783))))
  (define __function2785
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2784))))
  (define __function2786
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       (vector-ref __arg0 '2)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2785))))
  (define __function2787
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2786))))
  (define __function2788
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       (vector-ref __arg0 '2)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2787))))
  (define __function2789
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2788))))
  (define __function2790
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       (vector-ref __arg0 '2)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2789))))
  (define __function2791
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2790))))
  (define __function2792
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       (vector-ref __arg0 '2)
       (make-closure
        (vector
         (vector-ref __arg0 '0)
         (vector-ref __arg0 '1)
         (vector-ref __arg0 '2))
        __function2791))))
  (define __function2793
    (lambda (__arg0 __arg1 __arg2)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure (vector __arg2 __arg0 __arg1) __function2792))))
  (define __function2794 (lambda (__arg0 __arg1) __arg1))
  (define __closure2795 (make-closure '() __function2794))
  (define __function2796
    (lambda (__arg0 __arg1)
      (let ((tmp2811 (cdr __arg0)))
        ((closure-fun tmp2811) (closure-env tmp2811) '1000 (car __arg0)))))
  (define __function2797
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       '1000
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2796))))
  (define __function2798
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2797))))
  (define __function2799
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       '1000
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2798))))
  (define __function2800
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2799))))
  (define __function2801
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       '1000
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2800))))
  (define __function2802
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2801))))
  (define __function2803
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       '1000
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2802))))
  (define __function2804
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2803))))
  (define __function2805
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       '1000
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2804))))
  (define __function2806
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2805))))
  (define __function2807
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       '1000
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2806))))
  (define __function2808
    (lambda (__arg0 __arg1)
      ((closure-fun __task_info)
       (closure-env __task_info)
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2807))))
  (define __function2809
    (lambda (__arg0 __arg1)
      ((closure-fun __sleep)
       (closure-env __sleep)
       '1000
       (make-closure (cons (car __arg0) (cdr __arg0)) __function2808))))
  (let ((__env2744 '()))
    (let ((__monitor2725 (make-closure __env2744 __function2793)))
      (begin
        (set-closure-env! __monitor2725 __monitor2725)
        (let ((__cont27272733 __closure2795))
          ((closure-fun __task_info)
           (closure-env __task_info)
           (make-closure
            (cons __cont27272733 __monitor2725)
            __function2809)))))))
